.ui.container.grid
  .column

    #page-header
      h1.ui.header Semantic-UI grid examples
      p Basic grid layouts to get you familiar with building within the Semantic-UI grid system.

    .ui.section.divider

    h2.ui.header Three equal columns
    p Get three equal-width columns starting at desktops and scaling to large desktops. On mobile devices, tablets and below, the columns will automatically stack. If you want it to shrink rather than stack, you can remove the "stackable" class.
    .ui.three.column.stackable.grid
      .column
        p .column
      .column
        p .column
      .column
        p .column

    .ui.hidden.divider

    h2.ui.header Three unequal columns
    p Get three columns starting at desktops and scaling to large desktops of various widths. Remember, grid columns should add up to sixteen for a single horizontal block. More than that, and columns start stacking no matter the viewport.
    .ui.stackable.grid
      .four.wide.column
        p .four.wide.column
      .eight.wide.column
        p .eight.wide.column
      .four.wide.column
        p .four.wide.column

    .ui.hidden.divider

    h2.ui.header Two columns
    p Get two columns starting at desktops and scaling to large desktops.
    .ui.stackable.grid
      .ten.wide.column
        p .ten.wide.column
      .six.wide.column
        p .six.wide.column

    .ui.hidden.divider

    h2.ui.header Full width, single column
    p No grid classes are necessary for full-width elements.

    .ui.section.divider

    h2.ui.header Two columns with two nested columns
    p Per the documentation, nesting is easyâ€”just put a row of columns within an existing column. This gives you two columns starting at desktops and scaling to large desktops, with another two (equal widths) within the larger column.
      At mobile device sizes, tablets and down, these columns and their nested columns will stack.
    .ui.stackable.grid
      .ten.wide.column
        p .ten.wide.column
        .ui.stackable.grid
          .eight.wide.column
            p .eight.wide.column
          .eight.wide.column
            p .eight.wide.column
      .six.wide.column
        p .six.wide.column

    .ui.section.divider

    h2.ui.header Mixed: mobile and desktop
    p The Semantic grid system has three tiers of classes: mobile (phones), tablet (tablets), computer (desktops and larger desktops). You can use nearly any combination of these classes to create more dynamic and flexible layouts.
    p Here, you would see the computer, tablet, mobile only columns appear and disappear when you change the browser's viewport width.
    .ui.stackable.grid
      .ten.wide.computer.only.column
        p .ten.wide.computer.only.column
      .six.wide.computer.only.column
        p .six.wide.computer.only.column
    .ui.three.column.stackable.grid
      .computer.only.column
        p .computer.only.column
      .computer.only.column
        p .computer.only.column
      .computer.only.column
        p .computer.only.column
    .ui.two.column.stackable.grid
      .column
        p .column
      .column
        p .column

    .ui.section.divider

    h2.ui.header Mixed: mobile, tablet and desktop
    .ui.stackable.grid
      .ten.wide.computer.only.column
        p .ten.wide.computer.only.column
      .six.wide.computer.only.column
        p .six.wide.computer.only.column
    .ui.stackable.grid
      .ten.wide.tablet.only.column
        p .ten.wide.tablet.only.column
      .six.wide.tablet.only.column
        p .six.wide.tablet.only.column
    .ui.stackable.grid
      .mobile.only.column
        p .mobile.only.column
    .ui.grid
      .ten.wide.mobile.only.column
        p .ten.wide.mobile.only.column
    .ui.three.column.stackable.grid
      .computer.tablet.only.column
        p .computer.tablet.only.column
      .computer.tablet.only.column
        p .computer.tablet.only.column
      .computer.tablet.only.column
        p .computer.tablet.only.column

    .ui.section.divider

    h2.ui.header Column clearing
    p Grid will automatically clear previous columns, which presents clear floats with uneven content.:
    .ui.stackable.grid
        .four.wide.left.floated.column
          p .four.wide.left.floated.column
        .five.wide.centered.column
          p .five.wide.centered.column
        .six.wide.right.floated.column
          p .six.wide.right.floated.column
    .ui.four.column.stackable.grid
        .left.floated.column
          p .left.floated.column
        .right.floated.column
          p .right.floated.column

    .ui.section.divider

    h2.ui.header Reversed and doubling
    p Reversed grid allows you to reverse the order of columns according to devices.
    p Doubling grid will double columns' width for each device jump.
    p Change the width of browser to see the responsive effects.
    .ui.mobile.reversed.three.column.grid
      .column
        p Left
      .column
        p Middle
      .column
        p Right
    .ui.three.column.doubling.stackable.grid
      .column
        p .column
      .column
        p .column
      .column
        p .column


sass:
  #page-header
    h1
      font-size: 2.5em
    p
      font-size: 1.4em

  .ui.container.grid
    margin-top: 2em
    p
      font-size: 1.2em
    .ui.grid
      .column
        background-color: rgba(86, 61, 124, 0.15)
        border: solid 1px rgba(85, 61, 124, 0.2)
        margin-top: 1em
        margin-bottom: 1em
